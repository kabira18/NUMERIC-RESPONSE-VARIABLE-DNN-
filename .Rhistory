install.packages("neuralnet", lib="C:/Program Files/R-4.4.1/library")
library(neuralnet)
library(keras)
library(dplyr)
install.packages("mlbench", lib="C:/Program Files/R-4.4.1/library")
library(mlbench)
library(magrittr)
data("bostonhousing")
data("BostonHousing")
View(BostonHousing)
data<-BostonHousing
str(data)
data %>% mutate_if(is.factor,as.numeric)
str(data)
data$chas=as.numeric(data$chas)
str(data)
n<-neuralnet(medv~crim+zn+indus+chas+nox+rm+age+dis+rad+tax+ptratio+b+lstat,
data = data,
hidden = c(10,5),
linear.output = F,
lifesign = 'full',
rep = 1)
plot(n)
plot(n,
col.hidden = 'darkgreen',
col.hidden.synapse = 'darkgreen',
show.weights = F,
information = F,
fill='lightblue')
plot(n,
col.hidden = 'darkgreen',
col.hidden.synapse = 'darkgreen',
show.weights = F,
information = F,
fill='lightblue')
data<-as.matrix(data)
dimnames(data)<-NULL
set.seed(07)
ind<-sample(2,nrow(data),replace = T,prob = c(0.7,0.3))
training<-data[ind==1,1:13]
test<-data[ind==2,1:13]
trainingtarget<-data[ind==1,14]
testtarget<-data[ind==2,14]
m<-colMeans(training)
m
s<-apply(training,2,sd)
s
training<-scale(training,center = m,scale = s)
test<-scale(test,center = m,scale = s)
model<-keras_model_sequential()
model %>%
layer_dense(units = 5,activation = 'relu',input_shape = c(13)) %>%
layer_dense(units = 1)
